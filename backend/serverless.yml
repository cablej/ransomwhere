service: ransomwhere
useDotenv: true

custom:
  bucket: ransomwhere

provider:
  name: aws

  runtime: nodejs14.x
  iam.role.statements:
    - Effect: Allow
      Action:
        - s3:*
      Resource: 'arn:aws:s3:::ransomwhere'

  # serverless-offline:
  #   noPrependStageInUrl: true

  # environment:
  #   MONGO_URI: ${env:MONGO_URI}
  #   NODE_ENV: ${env:NODE_ENV}

plugins:
  - serverless-offline

functions:
  list:
    handler: api.list
    events:
      - http:
          path: list
          method: get
          cors:
            origin: '*'
            allowCredentials: true
            cacheControl: 'public, max-age=600'
            maxAge: 600
            headers:
              - Content-Type
              - X-Amz-Date
              - Authorization
              - X-Api-Key
              - X-Amz-Security-Token
              - X-Amz-User-Agent
              - Cache-Control

  export:
    handler: api.exportAll
    events:
      - http:
          path: export
          method: get
          cors:
            origin: '*'
            allowCredentials: true
            cacheControl: 'public, max-age=600'
            maxAge: 600
            headers:
              - Content-Type
              - X-Amz-Date
              - Authorization
              - X-Api-Key
              - X-Amz-Security-Token
              - X-Amz-User-Agent
              - Cache-Control

  submit:
    handler: api.submit
    events:
      - http:
          path: submit
          method: post
          cors: true

  reports:
    handler: api.reports
    events:
      - http:
          path: reports
          method: post
          cors: true

  # getS3URL:
  #   handler: api.getS3
  #   events:
  #     - http:
  #         path: s3
  #         method: post
  #         cors: true

  updateReport:
    handler: api.updateReport
    events:
      - http:
          path: reports/{id}
          method: post
          cors: true

  callback:
    handler: api.callback
    events:
      - http:
          path: callback
          method: get

  me:
    handler: api.me
    events:
      - http:
          path: users/me
          method: get
          cors:
            origin: 'ransomwhe.re'
            allowCredentials: true
            headers:
              - Content-Type
              - X-Amz-Date
              - Authorization
              - X-Api-Key
              - X-Amz-Security-Token
              - X-Amz-User-Agent
              - Cache-Control

  update:
    handler: cron.update
    timeout: 900
    # events:
    #   - schedule: rate(1 hour)

  import:
    handler: cron.import
